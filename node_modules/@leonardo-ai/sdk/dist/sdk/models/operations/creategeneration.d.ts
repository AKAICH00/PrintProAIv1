import { SpeakeasyBase } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
/**
 * Query parameters to be provided in the request body as a JSON object
 */
export declare class CreateGenerationRequestBody extends SpeakeasyBase {
    /**
     * Enable to use ControlNet. Requires an init image to be provided. Requires a model based on SD v1.5
     */
    controlNet?: boolean;
    /**
     * The type of ControlNet to use.
     */
    controlNetType?: shared.ControlnetType;
    /**
     * How strongly the generation should reflect the prompt. 7 is recommended. Must be between 1 and 20.
     */
    guidanceScale?: number;
    /**
     * The height of the images. Must be between 32 and 1024 and be a multiple of 8.
     */
    height?: number;
    /**
     * The ID of an existing image to use in image2image.
     */
    initGenerationImageId?: string;
    /**
     * The ID of an Init Image to use in image2image.
     */
    initImageId?: string;
    /**
     * How strongly the generated images should reflect the original image in image2image. Must be a float between 0.1 and 0.9.
     */
    initStrength?: number;
    /**
     * The model ID used for the image generation. If not provided uses sd_version to determine the version of Stable Diffusion to use.
     *
     * @remarks
     *
     * _Leonardo Creative_: 6bef9f1b-29cb-40c7-b9df-32b51c1f67d3
     * _Leonardo Select_: cd2b2a15-9760-4174-a5ff-4d2925057376
     * _Leonardo Signature_: 291be633-cb24-434f-898f-e662799936ad
     */
    modelId?: string;
    /**
     * The negative prompt used for the image generation
     */
    negativePrompt?: string;
    /**
     * The number of images to generate. Must be between 1 and 8. If either width or height is over 768, must be between 1 and 4.
     */
    numImages?: number;
    /**
     * The number of inference steps to use for the generation. Must be between 30 and 60.
     */
    numInferenceSteps?: number;
    /**
     * The style to generate images with.
     */
    presetStyle?: shared.SdGenerationStyle;
    /**
     * The prompt used to generate images
     */
    prompt: string;
    /**
     * Enable to use Prompt Magic.
     */
    promptMagic?: boolean;
    /**
     * Whether the generated images should show in the community feed.
     */
    public?: boolean;
    /**
     * The scheduler to generate images with. Defaults to EULER_DISCRETE if not specified.
     */
    scheduler?: shared.SdGenerationSchedulers;
    /**
     * The base version of stable diffusion to use if not using a custom model. v1_5 is 1.5, v2 is 2.1, if not specified it will default to v1_5.
     */
    sdVersion?: shared.SdVersions;
    /**
     * Whether the generated images should tile on all axis.
     */
    tiling?: boolean;
    /**
     * The width of the images. Must be between 32 and 1024 and be a multiple of 8.
     */
    width?: number;
}
export declare class CreateGeneration200ApplicationJSONSDGenerationOutput extends SpeakeasyBase {
    generationId?: string;
}
/**
 * Responses for POST /generations
 */
export declare class CreateGeneration200ApplicationJSON extends SpeakeasyBase {
    sdGenerationJob?: CreateGeneration200ApplicationJSONSDGenerationOutput;
}
export declare class CreateGenerationResponse extends SpeakeasyBase {
    contentType: string;
    statusCode: number;
    rawResponse?: AxiosResponse;
    /**
     * Responses for POST /generations
     */
    createGeneration200ApplicationJSONObject?: CreateGeneration200ApplicationJSON;
}
